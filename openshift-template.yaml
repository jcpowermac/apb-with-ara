---
apiVersion: v1
kind: Template
metadata:
  name: ara
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ara
    name: ara
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ara
      deploymentconfig: ara
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      app: postgresql-ephemeral
    name: postgresql
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
      nodePort: 32345
    selector:
      name: postgresql
    sessionAffinity: None
    type: NodePort

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ara
    name: ara
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ara
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ara
    name: ara
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ara
      deploymentconfig: ara
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ara
          deploymentconfig: ara
      spec:
        containers:
        - env:
          - name: ARA_HOST
            value: 0.0.0.0
          - name: ARA_PORT
            value: "8080"
          - name: ARA_DATABASE
            value: postgresql+psycopg2://ara:password@postgresql:5432/ara
          image: quay.io/jcallen/ara
          imagePullPolicy: Always
          name: ara
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-ephemeral
      template: postgresql-ephemeral-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ara
          - name: POSTGRESQL_PASSWORD
            value: password
          - name: POSTGRESQL_DATABASE
            value: ara
          image: registry.centos.org/centos/postgresql-96-centos7:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - pg_isready -h 127.0.0.1 -p 5432
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: postgresql-data
    test: false
    triggers:
    - type: ConfigChange
